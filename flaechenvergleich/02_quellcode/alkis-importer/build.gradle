plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'maven'
}

group = 'de.codefor.bielefeld.randentscheid.flaechenvergleich'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
    jaxb
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'de.codecentric:spring-boot-admin-starter-client'
    implementation 'de.codecentric:spring-boot-admin-starter-server'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

    compile "org.geotools:gt-shapefile:${geotoolsVersion}"
    testCompile "org.geotools:gt-swing:${geotoolsVersion}"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

    compile "io.vavr:vavr:${vavrVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

    jaxb (
            'com.sun.xml.bind:jaxb-xjc:2.3.3',
            'com.sun.xml.bind:jaxb-impl:2.3.3',
            'org.glassfish.jaxb:jaxb-runtime:2.3.3'
    )
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

jar {
    enabled = true
}

task jaxb {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/generated-sources/jaxb")
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'de.codefor.bielefeld.randentscheid.flaechenvergleich.alkisimporter.model.basisschema',
                extension: 'true',
                schema: 'src/main/resources/xsd/AAA-Basisschema.xsd'
        ) {
            binding(dir: 'src/main/resources/xsd/xjb', includes: 'globalBindings.xjb, gml.xjb, ows.xjb, xlink.xjb')
        }
    }
}

compileJava.dependsOn jaxb